plugins {
    id 'org.openjfx.javafxplugin' version '0.0.12'
    id 'org.beryx.jlink' version '2.24.4'
    id 'idea'
    id 'java-library'
}

javafx {
    version = "18"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.base']
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.cs195tennis'
    mainClass = 'com.example.cs195tennis.App'
}



ext {
    jfoenixVersion = '9.0.10' as Object
    testfxVersion = '4.0.16-alpha' as Object
    log4JVersion = '2.17.2' as Object
    gsonVersion = '2.9.0' as Object
    charFxMathVersion = '11.2.6' as Object
    slf4jVersion = '2.0.0-alpha7' as Object
    fontAwesomeVersion = '12.3.1' as Object
    fontAwesomeJipsy = '1.1.1' as Object
    sqliteVersion = '3.36.0.3' as Object
}



dependencies {

    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'org.xerial:sqlite-jdbc'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome-pack'
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'com.jfoenix:jfoenix'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: "${sqliteVersion}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit.jupiter-api', version: "${junitVersion}"
    implementation group: 'org.apache.logging.log4j', name:'log4j-api', version: "${log4JVersion}"
    implementation group: 'org.apache.logging.log4j', name:'log4j-core', version: "${log4JVersion}"
    implementation group: 'org.kordamp.ikonli', name: 'ikonli-fontawesome-pack', version: "${fontAwesomeVersion}"
    implementation group: 'org.kordamp.jipsy', name: 'jipsy-annotations', version: "${fontAwesomeJipsy}"
    implementation group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"
    implementation group: 'com.jfoenix', name: 'jfoenix', version: "${jfoenixVersion}"
    testImplementation"org.testfx:testfx-junit5:${testfxVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation group: 'testfx', name: 'testfx-core', version: "${testfxVersion}"
}

run {
    jvmArgs = ['-Djdk.gtk.version=2',
               "--add-exports=java.base/java.lang.reflect=com.jfoenix",
               "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix",
               "--add-exports=javafx.controls/com.sun.javafx.scene.control=com.jfoenix",
               "--add-exports=javafx.base/com.sun.javafx.binding=com.jfoenix",
               "--add-exports=java.base/com.sun.javafx.binding=com.jfoenix",
               "--add-exports=javafx.graphics/com.sun.javafx.stage=com.jfoenix"
    ]
}
jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip") as RegularFile
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'cs195Tennis'
    }

}

jlinkZip {
    group = 'distribution'
}

test {
    useJUnitPlatform()
}
