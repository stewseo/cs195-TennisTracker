
        Result<Record4<
                String,                   // FILM.TITLE
                Result<Record2<
                        String,               // ACTOR.FIRST_NAME
                        String                // ACTOR.LAST_NAME
                        >>,                       // "actors"
                Result<Record1<String>>,  // CATEGORY.NAME
                Result<Record4<
                        String,               // CUSTOMER.FIRST_NAME
                        String,               // CUSTOMER.LAST_NAME
                        Result<Record2<
                                LocalDateTime,    // PAYMENT.PAYMENT_DATE
                                BigDecimal        // PAYMENT.AMOUNT
                                >>,
                        BigDecimal            // "total"
                        >>
                >> result =
                multiSetToTxt(
                ctx.select(
                                FILM.TITLE,
                                multiset(
                                        select(
                                                ACTOR.FIRST_NAME,
                                                ACTOR.LAST_NAME
                                        )
                                                .from(FILM_ACTOR)
                                                .innerJoin(ACTOR).on(ACTOR.ACTOR_ID.eq(FILM_ACTOR.ACTOR_ID))
                                                .where(FILM_ACTOR.FILM_ID.eq(FILM.FILM_ID))
                                ).as("actors"),

                                // ... and all categories that categorise the film
                                multiset(
                                        select(CATEGORY.NAME)
                                                .from(FILM_CATEGORY)
                                                .join(CATEGORY)
                                                .on(CATEGORY.CATEGORY_ID.eq(FILM_CATEGORY.CATEGORY_ID))
                                                .where(FILM_CATEGORY.FILM_ID.eq(FILM.FILM_ID))
                                ).as("categories"),

                                // ... and all customers who rented the film, as well
                                // as their payments
                                multiset(
                                        select(
                                                CUSTOMER.FIRST_NAME,
                                                CUSTOMER.LAST_NAME,
                                                multisetAgg(
                                                        PAYMENT.PAYMENT_DATE,
                                                        PAYMENT.AMOUNT
                                                ).as("payments"),
                                                sum(PAYMENT.AMOUNT).as("total"))
                                                .from(PAYMENT)
                                                .join(CUSTOMER).on(PAYMENT.CUSTOMER_ID.eq(CUSTOMER.CUSTOMER_ID))
                                                .join(RENTAL).on(PAYMENT.RENTAL_ID.eq(RENTAL.RENTAL_ID))
                                                .join(INVENTORY).on(RENTAL.INVENTORY_ID.eq(INVENTORY.INVENTORY_ID))
                                                .where(INVENTORY.FILM_ID.eq(FILM.FILM_ID))
                                                .groupBy(
                                                        CUSTOMER.CUSTOMER_ID,
                                                        CUSTOMER.FIRST_NAME,
                                                        CUSTOMER.LAST_NAME)
                                ).as("customers")
                        )
                        .from(FILM)
                        .where(FILM.TITLE.like("A%"))
                        .orderBy(FILM.TITLE)
                        .limit('5'),
                        fileName,
                        description,
                        List.of(table("actor"), table("film_actor"), table("customer")
                        )
                )
                        .fetch();
    }