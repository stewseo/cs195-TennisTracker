module5/module5_question7
Problem:
Use the UNION operator to generate a result set consisting of three columns
from the Orders table:
ShipStatus: A calculated column that contains a value of SHIPPED or NOT SHIPPED
OrderID: The OrderID column
OrderDate: The OrderDate column
If the order has a value in the ShipDate column, the ShipStatus column should contain a value of SHIPPED. Otherwise, it should contain a value of NOT SHIPPED.
Sort the final result set by OrderDate.
Table1: orders
Records: 9
Primary Key: constraint "PRIMARY"
  primary key ("order_id")
References: [constraint "orders_fk_customers"
  foreign key ("customer_id")
  references "my_guitar_shop"."customers" ("customer_id")]
Indexes: []
Identity: "my_guitar_shop"."orders"."order_id"
 Records in orders
+--------+-----------+---------------------+-----------+----------+---------------------+---------------+----------------+----------------+------------+------------------+
|order_id|customer_id|order_date           |ship_amount|tax_amount|ship_date            |ship_address_id|card_type       |card_number     |card_expires|billing_address_id|
+--------+-----------+---------------------+-----------+----------+---------------------+---------------+----------------+----------------+------------+------------------+
|       1|          1|2015-03-28 09:40:28.0|       5.00|     32.32|2015-03-30 15:32:51.0|              1|Visa            |4111111111111111|04/2020     |                 2|
|       2|          2|2015-03-28 11:23:20.0|       5.00|      0.00|2015-03-29 12:52:14.0|              3|Visa            |4012888888881881|08/2019     |                 3|
|       3|          1|2015-03-29 09:44:58.0|      10.00|     89.92|2015-03-31 09:11:41.0|              1|Visa            |4111111111111111|04/2017     |                 2|
|       4|          3|2015-03-30 15:22:31.0|       5.00|      0.00|2015-04-03 16:32:21.0|              4|American Express|378282246310005 |04/2016     |                 4|
|       5|          4|2015-03-31 05:43:11.0|       5.00|      0.00|2015-04-02 14:21:12.0|              5|Visa            |4111111111111111|04/2019     |                 6|
|       6|          5|2015-03-31 18:37:22.0|       5.00|      0.00|{null}               |              7|Discover        |6011111111111117|04/2019     |                 7|
|       7|          6|2015-04-01 23:11:12.0|      15.00|      0.00|2015-04-03 10:21:35.0|              8|MasterCard      |5555555555554444|04/2019     |                 8|
|       8|          7|2015-04-02 11:26:38.0|       5.00|      0.00|{null}               |              9|Visa            |4012888888881881|04/2019     |                10|
|       9|          4|2015-04-03 12:22:31.0|       5.00|      0.00|{null}               |              5|Visa            |4111111111111111|04/2019     |                 6|
+--------+-----------+---------------------+-----------+----------+---------------------+---------------+----------------+----------------+------------+------------------+


Query Sql String:
SELECT
    i.order_id,
    i.order_date,
    'not_shipped' AS 'ship_status'
FROM
    orders i
WHERE
    i.ship_date IS NULL
UNION ALL
SELECT
    i.order_id,
    i.order_date,
    'shipped' AS 'ship_status'
FROM
    orders i
WHERE
    i.ship_date IS NOT NULL
ORDER BY
    order_date asc

The formatted plan as returned by the database:
 +------+------------+----------+----------+----+-------------+------+-------+------+------+--------+-------------------------------+
|    id|select_type |table     |partitions|type|possible_keys|key   |key_len|ref   |  rows|filtered|Extra                          |
+------+------------+----------+----------+----+-------------+------+-------+------+------+--------+-------------------------------+
|     1|PRIMARY     |i         |{null}    |ALL |{null}       |{null}|{null} |{null}|     9|   11.11|Using where                    |
|     2|UNION       |i         |{null}    |ALL |{null}       |{null}|{null} |{null}|     9|   88.89|Using where                    |
|{null}|UNION RESULT|<union1,2>|{null}    |ALL |{null}       |{null}|{null} |{null}|{null}|  {null}|Using temporary; Using filesort|
+------+------------+----------+----------+----+-------------+------+-------+------+------+--------+-------------------------------+

The cost the database associated with the execution of the query:  NaN
The estimated number of rows (cardinality) that is to be returned by the query: 9.0
The actual number of rows (cardinality) returned by the query:  9
Result Records:
  +--------+---------------------+-----------+
|order_id|order_date           |ship_status|
+--------+---------------------+-----------+
|       1|2015-03-28 09:40:28.0|shipped    |
|       2|2015-03-28 11:23:20.0|shipped    |
|       3|2015-03-29 09:44:58.0|shipped    |
|       4|2015-03-30 15:22:31.0|shipped    |
|       5|2015-03-31 05:43:11.0|shipped    |
|       6|2015-03-31 18:37:22.0|not_shipped|
|       7|2015-04-01 23:11:12.0|shipped    |
|       8|2015-04-02 11:26:38.0|not_shipped|
|       9|2015-04-03 12:22:31.0|not_shipped|
+--------+---------------------+-----------+
