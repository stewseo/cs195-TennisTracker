plugins{
    id("idea")
    id("cs195-TennisTracker.java-conventions")
    id("java-library")
    id("application")
    id("com.gradle.plugin-publish") version "0.12.0"
    id ("com.bmuschko.docker-remote-api") version "7.4.0"
    id "com.avast.gradle.docker-compose" version "0.16.8"
}

repositories {
    mavenCentral()
}

import com.bmuschko.gradle.docker.tasks.image.*
import static com.bmuschko.gradle.docker.tasks.image.Dockerfile.Instruction
import static com.bmuschko.gradle.docker.tasks.image.Dockerfile.FromInstruction
import static com.bmuschko.gradle.docker.tasks.image.Dockerfile.From

tasks.register('dockerBuildImage', DockerBuildImage) {
    inputDir = file('docker')
}

tasks.create('createDockerfile', Dockerfile) {
    from('openjdk:17-alpine')
    copyFile('my-app-1.0.jar', '/app/my-app-1.0.jar')
    entryPoint('java')
    defaultCommand('-jar', '/app/my-app-1.0.jar')
    exposePort(8080)
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

application {
    mainModule.set("com.example.Database")
}

createDockerfile {
    List<Instruction> originalInstructions = new ArrayList<Instruction>(instructions.get())
    int fromInstructionIndex = originalInstructions
            .findIndexOf { it.keyword == FromInstruction.KEYWORD }
    originalInstructions.remove(fromInstructionIndex)
    FromInstruction baseImage = new FromInstruction(new From('openjdk:8-alpine'))
    originalInstructions.add(0, baseImage)
    instructions.set(originalInstructions)
}

tasks.register('count') {
    doLast {
        4.times { print "$it " }
    }
}

var jooqVersion = '3.16.6'
var testcontainersVersion = "1.17.3"
dependencies {
    implementation (project(":utilities"))
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation("org.jooq:jooq-meta:$jooqVersion")
    implementation("org.jooq:jooq:$jooqVersion")

    implementation("org.testcontainers:mysql:$testcontainersVersion")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0-RC1")
    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:5.9.0-RC1")


//    testImplementation(enforcedPlatform("org.junit:junit-bom:5.8.2"))
}


dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

